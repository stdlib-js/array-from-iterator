{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isIteratorLike = require( '@stdlib/assert-is-iterator-like' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Creates (or fills) an array from an iterator.\n*\n* @param {Iterator} iterator - source iterator\n* @param {Collection} [out] - output array\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} iterator argument must be an iterator\n* @throws {TypeError} callback argument must be a function\n* @returns {Collection} output array\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2array( iter );\n* // returns <Array>\n*/\nfunction iterator2array() {\n\tvar iterator;\n\tvar thisArg;\n\tvar fcn;\n\tvar out;\n\tvar len;\n\tvar set;\n\tvar i;\n\tvar v;\n\n\titerator = arguments[ 0 ];\n\tif ( arguments.length > 1 ) {\n\t\tif ( isCollection( arguments[ 1 ] ) ) {\n\t\t\tout = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Iterator argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\ti = -1;\n\tif ( out === void 0 ) {\n\t\tout = [];\n\t\tif ( fcn ) {\n\t\t\twhile ( true ) {\n\t\t\t\ti += 1;\n\t\t\t\tv = iterator.next();\n\t\t\t\tif ( v.done ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tout.push( fcn.call( thisArg, v.value, i ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\twhile ( true ) {\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tout.push( v.value );\n\t\t}\n\t\treturn out;\n\t}\n\tlen = out.length;\n\tset = arraylike2object( out ).setter;\n\tif ( fcn ) {\n\t\twhile ( i < len-1 ) {\n\t\t\ti += 1;\n\t\t\tv = iterator.next();\n\t\t\tif ( v.done ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tset( out, i, fcn.call( thisArg, v.value, i ) );\n\t\t}\n\t\treturn out;\n\t}\n\twhile ( i < len-1 ) {\n\t\ti += 1;\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tset( out, i, v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterator2array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create (or fill) an array from an iterator.\n*\n* @module @stdlib/array-from-iterator\n*\n* @example\n* var randu = require( '@stdlib/random-iter-randu' );\n* var iterator2array = require( '@stdlib/array-from-iterator' );\n*\n* var iter = randu({\n*     'iter': 10\n* });\n*\n* var arr = iterator2array( iter );\n* // returns <Array>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isFunction","require$$0","isCollection","require$$1","isIteratorLike","require$$2","arraylike2object","require$$3","format","require$$4","lib","iterator","thisArg","fcn","out","len","set","i","v","arguments","length","TypeError","next","done","push","call","value","setter"],"mappings":";;ybAsBA,IAAIA,EAAaC,EACbC,EAAeC,EACfC,EAAiBC,EACjBC,EAAmBC,EACnBC,EAASC,EA4Gb,IC1FAC,EDQA,WACC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAP,EAAWQ,UAAW,GACjBA,UAAUC,OAAS,EACvB,GAAKlB,EAAciB,UAAW,KAE7B,GADAL,EAAMK,UAAW,GACZA,UAAUC,OAAS,EAAI,CAE3B,IAAMpB,EADNa,EAAMM,UAAW,IAEhB,MAAM,IAAIE,UAAWb,EAAQ,uEAAwEK,IAEtGD,EAAUO,UAAW,QAEhB,CAEN,IAAMnB,EADNa,EAAMM,UAAW,IAEhB,MAAM,IAAIE,UAAWb,EAAQ,uEAAwEK,IAEtGD,EAAUO,UAAW,GAGvB,IAAMf,EAAgBO,GACrB,MAAM,IAAIU,UAAWb,EAAQ,kGAAmGG,IAGjI,GADAM,GAAK,OACQ,IAARH,EAAiB,CAErB,GADAA,EAAM,GACDD,EAAM,CACV,KACCI,GAAK,IACLC,EAAIP,EAASW,QACNC,MAGPT,EAAIU,KAAMX,EAAIY,KAAMb,EAASM,EAAEQ,MAAOT,IAEvC,OAAOH,EAER,OACCI,EAAIP,EAASW,QACNC,MAGPT,EAAIU,KAAMN,EAAEQ,OAEb,OAAOZ,EAIR,GAFAC,EAAMD,EAAIM,OACVJ,EAAMV,EAAkBQ,GAAMa,OACzBd,EAAM,CACV,KAAQI,EAAIF,EAAI,IACfE,GAAK,IACLC,EAAIP,EAASW,QACNC,OAGPP,EAAKF,EAAKG,EAAGJ,EAAIY,KAAMb,EAASM,EAAEQ,MAAOT,IAE1C,OAAOH,EAER,KAAQG,EAAIF,EAAI,IACfE,GAAK,IACLC,EAAIP,EAASW,QACNC,OAGPP,EAAKF,EAAKG,EAAGC,EAAEQ,OAEhB,OAAOZ"}